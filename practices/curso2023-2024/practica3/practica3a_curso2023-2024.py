"""
Practica 3a: Propagaci√≥n ondas EM en el vac√≠o

Aplicar el metodo FCTS a las ecuaciones de Maxwell
"""
import numpy as np
import matplotlib.pyplot as plt

"""
Ejercicio 1: Representar condiciones iniciales en 3D
"""
n = 200

# Condiciones iniciales
def E_inicial(z):
    return 10 * np.sin(2 * np.pi * z)

def H_inicial(z):
    return 10 * np.sin(2 * np.pi * z)

# Calculo de los campos
z = np.linspace(0, 2, n)
Ex = E_inicial(z)
Hy = H_inicial(z)
cer = np.zeros(200) # l√≠nea negra para destacar el eje ùëç

# Plot 3D
fig, ax = plt.subplots(subplot_kw={"projection": "3d"})
ax.plot(z, cer, Ex, label='Campo El√©ctrico')
ax.plot(z, Hy, cer, label='Campo Magn√©tico')
ax.plot([0, 2], [0, 0], [0, 0], 'k-')
plt.title('Onda EM inicial')
plt.legend()
plt.show()

"""
Ejercicio 2: A partir de las ecuaciones discretizadas definir una funci√≥n que tome los valores de ùê∏ùë• y ùêªùë¶ en el 
eje ùëç en un tiempo ùë°, y devuelva los valores de ùê∏ùë• y ùêªùë¶ en un tiempo ùë° + ‚Ñéùë° ->  que aplique FTCS
"""
# Implementamos la evoluci√≥n temporal
beta = 0.25

def maxwell(E,H):
    En=np.zeros(n)
    Hn=np.zeros(n)
    En[1:n-1]=E[1:n-1]-beta*(H[2:n]-H[0:n-2]) # Con el slicing calculamos Ex y Hy de forma r√°pida
    Hn[1:n-1]=H[1:n-1]-beta*(E[2:n]-E[0:n-2]) # y compacta
    En[0]=E[0]-beta*(H[1]-H[n-2]) # Para z=0 y z=2, calculamos los nuevos campos de forma an√°loga
    En[-1]=En[0] # pero haciendo uso de la condici√≥n de contorno peri√≥dica
    Hn[0]=H[0]-beta*(E[1]-E[n-2])
    Hn[-1]=Hn[0]
    return En, Hn

"""
Ejercicio 3: Realizar 20 iteraciones sucesivas de la funci√≥n definida en el apartado anterior partiendo
de la condici√≥n inicial representada en el apartado 1. A√±adir el resultado obtenido a
la representaci√≥n del primer apartado. ¬øQu√© observas?
"""
# Creamos el plot en 3 dimensiones y representamos la condici√≥n inicial
Ex=E_inicial(z)
Hy=H_inicial(z)

fig,ax=plt.subplots(subplot_kw={"projection":"3d"})
ax.plot(z,cer,Ex,label='Campo El√©ctrico')
ax.plot(z,Hy,cer,label='Campo Magn√©tico')
ax.plot([0,2],[0,0],[0,0],'k-')
plt.legend()

# Calculamos 20 iteraciones de la evolucion temporal
for k in range(20):
    Ex,Hy=maxwell(Ex,Hy)

# A√±adimos los Ex y Hy obtenidos al plot
ax.plot(z,cer,Ex,label='Campo El√©ctrico tras iterar')
ax.plot(z,Hy,cer,label='Campo Magn√©tico tras iterar')
plt.legend()
plt.show()
# Observamos c√≥mo las ondas se desplazan con velocidad constante en la direcci√≥n creciente de Z
# sin cambiar su amplitud ni forma